version: '3.8'

services:
  # Strapi后端服务
  strapi:
    build: 
      context: ../backend
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      DATABASE_CLIENT: postgres
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: ${POSTGRES_DB:-webspark}
      DATABASE_USERNAME: ${POSTGRES_USER:-strapi}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
      NODE_ENV: ${NODE_ENV:-production}
    ports:
      - "1337:1337"
    volumes:
      - strapi_uploads:/opt/app/public/uploads
    depends_on:
      - postgres
    networks:
      - webspark-network

  # PostgreSQL数据库
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-strapi}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-webspark}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - webspark-network

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - strapi
    networks:
      - webspark-network

  # Redis缓存 (可选)
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - webspark-network

volumes:
  postgres_data:
    driver: local
  strapi_uploads:
    driver: local
  redis_data:
    driver: local

networks:
  webspark-network:
    driver: bridge 